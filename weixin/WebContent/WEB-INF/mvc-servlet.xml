<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	
	<!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="org.oms.qiye.web"/>
	<context:component-scan base-package="com.winsolution.weixin"/>
	
	<!-- 启用spring mvc 注解  -->
	<mvc:annotation-driven />
	<!-- 访问config.properties文件 -->
	<!-- <context:property-placeholder location="classpath:config.properties"/>  -->
	<bean id ="propertyConfigurer" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties"/>
	</bean>
	<!--
	<bean id ="propertyConfigurer" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
                <value>classpath*:test.properties</value>
            </list>
        </property>
    </bean> 
    -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!--
	<bean id="myTest" class="com.winsolution.weixin.MyTest">  
       <property name="a" value="${a}" />  
       <property name="b" value="${b}" />  
       <property name="c" value="${c}" />  
    </bean>
    -->
 	<!-- 创建一个数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
       <property name="driverClassName" value="${driverClassName}" />  
       <property name="url" value="${url}" />  
       <property name="username" value="${username}" />  
       <property name="password" value="${password}" />  
    </bean>
    <!-- 把数据源交给对象sqlSessionFactory管理 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
       <property name="dataSource" ref="dataSource" />
       <!-- mybatis位置文件的位置 -->
       <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
       <!-- mapper.xml文件的位置 -->
       <property name="mapperLocations" value="classpath:com/winsolution/weixin/mapper/*.xml"/>
    </bean>
    <!-- 批量生成“org.mybatis.spring.SqlSessionFactoryBean”,以自动配置的方式定位每一个dao接口,都获得sqlSession -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <property name="basePackage" value="com.winsolution.weixin.dao" />
       <!--  <property name="annotationClass" value="com.tiantian.mybatis.annotation.MybatisMapper"/>
       <property name="markerInterface" value="classMateMapper"/> -->
       <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
    </bean>
 	
 	
	<!-- 静态文件处理 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />

	<!-- OAuth2拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
			<mvc:mapping path="/**" />
			<ref bean="oauth2Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<bean id="oauth2Interceptor" class="org.oms.qiye.interceptor.OAuth2Interceptor">
	</bean>
</beans>
